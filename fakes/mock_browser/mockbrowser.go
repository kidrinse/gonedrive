// Code generated by MockGen. DO NOT EDIT.
// Source: browser/browser.go

// Package mock_browser is a generated GoMock package.
package mock_browser

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBrowser is a mock of Browser interface
type MockBrowser struct {
	ctrl     *gomock.Controller
	recorder *MockBrowserMockRecorder
}

// MockBrowserMockRecorder is the mock recorder for MockBrowser
type MockBrowserMockRecorder struct {
	mock *MockBrowser
}

// NewMockBrowser creates a new mock instance
func NewMockBrowser(ctrl *gomock.Controller) *MockBrowser {
	mock := &MockBrowser{ctrl: ctrl}
	mock.recorder = &MockBrowserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBrowser) EXPECT() *MockBrowserMockRecorder {
	return m.recorder
}

// OpenURL mocks base method
func (m *MockBrowser) OpenURL(url string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OpenURL", url)
	ret0, _ := ret[0].(error)
	return ret0
}

// OpenURL indicates an expected call of OpenURL
func (mr *MockBrowserMockRecorder) OpenURL(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OpenURL", reflect.TypeOf((*MockBrowser)(nil).OpenURL), url)
}
